// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate correctly with every option 1`] = `
"interface CurriedFunction1<T1, R> {
    (v1: T1): R;
}
interface CurriedFunction2<T1, T2, R> {
    (v1: T1): CurriedFunction1<T2, R>;
    (_1: PH, v2: T2): CurriedFunction1<T1, R>;
    <$SEL extends \\"1\\">(): (v1: T1) => CurriedFunction1<T2, R>;
    <$SEL extends \\"01\\">(): (_1: PH, v2: T2) => CurriedFunction1<T1, R>;
    <$SEL extends \\"11\\">(): (v1: T1, v2: T2) => R;
    (v1: T1, v2: T2): R;
}
interface CurriedFunction3<T1, T2, T3, R> {
    (v1: T1): CurriedFunction2<T2, T3, R>;
    (_1: PH, v2: T2): CurriedFunction2<T1, T3, R>;
    (v1: T1, v2: T2): CurriedFunction1<T3, R>;
    (_1: PH, _2: PH, v3: T3): CurriedFunction2<T1, T2, R>;
    (_1: PH, v2: T2, v3: T3): CurriedFunction1<T1, R>;
    (v1: T1, _2: PH, v3: T3): CurriedFunction1<T2, R>;
    <$SEL extends \\"1\\">(): (v1: T1) => CurriedFunction2<T2, T3, R>;
    <$SEL extends \\"01\\">(): (_1: PH, v2: T2) => CurriedFunction2<T1, T3, R>;
    <$SEL extends \\"11\\">(): (v1: T1, v2: T2) => CurriedFunction1<T3, R>;
    <$SEL extends \\"001\\">(): (_1: PH, _2: PH, v3: T3) => CurriedFunction2<T1, T2, R>;
    <$SEL extends \\"011\\">(): (_1: PH, v2: T2, v3: T3) => CurriedFunction1<T1, R>;
    <$SEL extends \\"101\\">(): (v1: T1, _2: PH, v3: T3) => CurriedFunction1<T2, R>;
    <$SEL extends \\"111\\">(): (v1: T1, v2: T2, v3: T3) => R;
    (v1: T1, v2: T2, v3: T3): R;
}
"
`;

exports[`should generate correctly with placeholder 1`] = `
"interface CurriedFunction1<T1, R> {
    (v1: T1): R;
}
interface CurriedFunction2<T1, T2, R> {
    (v1: T1): CurriedFunction1<T2, R>;
    (_1: PH, v2: T2): CurriedFunction1<T1, R>;
    (v1: T1, v2: T2): R;
}
interface CurriedFunction3<T1, T2, T3, R> {
    (v1: T1): CurriedFunction2<T2, T3, R>;
    (_1: PH, v2: T2): CurriedFunction2<T1, T3, R>;
    (v1: T1, v2: T2): CurriedFunction1<T3, R>;
    (_1: PH, _2: PH, v3: T3): CurriedFunction2<T1, T2, R>;
    (_1: PH, v2: T2, v3: T3): CurriedFunction1<T1, R>;
    (v1: T1, _2: PH, v3: T3): CurriedFunction1<T2, R>;
    (v1: T1, v2: T2, v3: T3): R;
}
"
`;

exports[`should generate correctly with selectable 1`] = `
"interface CurriedFunction1<T1, R> {
    (v1: T1): R;
}
interface CurriedFunction2<T1, T2, R> {
    (v1: T1): CurriedFunction1<T2, R>;
    <$SEL extends \\"1\\">(): (v1: T1) => CurriedFunction1<T2, R>;
    <$SEL extends \\"11\\">(): (v1: T1, v2: T2) => R;
    (v1: T1, v2: T2): R;
}
interface CurriedFunction3<T1, T2, T3, R> {
    (v1: T1): CurriedFunction2<T2, T3, R>;
    (v1: T1, v2: T2): CurriedFunction1<T3, R>;
    <$SEL extends \\"1\\">(): (v1: T1) => CurriedFunction2<T2, T3, R>;
    <$SEL extends \\"11\\">(): (v1: T1, v2: T2) => CurriedFunction1<T3, R>;
    <$SEL extends \\"111\\">(): (v1: T1, v2: T2, v3: T3) => R;
    (v1: T1, v2: T2, v3: T3): R;
}
"
`;

exports[`should generate correctly without any options 1`] = `
"interface CurriedFunction1<T1, R> {
    (v1: T1): R;
}
interface CurriedFunction2<T1, T2, R> {
    (v1: T1): CurriedFunction1<T2, R>;
    (v1: T1, v2: T2): R;
}
interface CurriedFunction3<T1, T2, T3, R> {
    (v1: T1): CurriedFunction2<T2, T3, R>;
    (v1: T1, v2: T2): CurriedFunction1<T3, R>;
    (v1: T1, v2: T2, v3: T3): R;
}
"
`;
